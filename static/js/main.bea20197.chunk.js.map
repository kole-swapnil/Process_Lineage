{"version":3,"sources":["Components/HeaderComponent.js","Components/ItemComponent.js","getWeb3.js","Components/HomeComponent.js","Components/SignUpComponent.js","Components/ShipmentComponent.js","Components/FooterComponent.js","Components/RegisterComponent.js","Components/AllmemberComponent.js","Components/MainComponents.js","App.js","serviceWorker.js","index.js"],"names":["util1","vx","customer","quantity","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Header","props","conver","x","utils","toWei","converb","fromWei","state","isNavOpen","togglenav","bind","this","setState","balance","toString","registered","Fragment","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","Collapse","isOpen","navbar","Nav","NavItem","style","width","justifyContent","to","color","Component","Home","Container","Card","marginTop","marginBottom","CardImg","top","src","SignUp","handleSubmitMan","handleSubmitCust","handleSubmitGovt","event","preventDefault","reghandler","accounts","class","aria-hidden","type","name","placeholder","required","textDecoration","alldocs","calDist","c","manu","cnt","pin","custpincode","min","i","y","manupincode","subtract","add","manuadd","b","itemtype","itemprice","itemgst","itemdesc","Allpatrender","buyitem","typeitem","contract","methods","itemcount","call","res","response2","response3","cntres2","cntres3","Items","rex","push","j","Manufacturers","manadr","rex2","nearadd","totalvalue","qty","value","alert","creatingShipment","itemcat","dish","str","totalamt","parseInt","createShipment","send","from","gas","toggleModal","docCount","isModalOpen","handleInputChange","target","but","price","cl","CardBody","CardTitle","itemid","CardText","category","gst","description","Col","md","size","offset","Button","Modal","toggle","ModalHeader","Input","id","onChange","AllItemComponent","createItem","createItems","creatingItems","desc","toggleModal1","cust","manuf","isModalOpen1","customercount","cus","manufacturercount","response","Customers","Menu","map","key","ch","ModalBody","Form","FormGroup","Label","htmlFor","innerRef","input","arr7","arr8","secondsToHms","d","Number","h","Math","floor","m","s","step0Contents","display","alignItems","step1Contents","step2Contents","onFormSubmit1","value1","val","fun","cancel","withdrawmoney","shid","res2","delivered","getshipevents","getpayevents","arr","timefor","timeof","getPastEvents","filter","ship_id","fromBlock","req","forEach","ele","returnValues","shstate","times","day","moment","unix","time","format","timenow","res7","label","subtitle","content","length","timedif","po","shiptime","next","asp","pays","pay","payfor","ships","getshipState","getshipstate","converx","util7","convery","dopayment","payitem","updateShipstate","quan","updateShstate","back","paytime","progt","shipstate","prog","paddingRight","paddingLeft","payment","xy","states","bak","status","sm","startingStep","primaryBtnClass","secondaryBtnClass","onSubmit","steps","Shipment","shipstates","res5","shipmentcount","Shipments","custadr","Footer","reg","bottom","RegisterComp","updatingManufacturer","pinc","updateManufacturer","addingCustomer","addCustomer","updatingCustomer","modifyCustomer","addingManufacturer","addManufacturer","pincode","handleSubmit","JSON","stringify","func","classname","row","allcusts","Allmanrender","manuname","Allcustrender","custs","custname","custadd","AllMemComponent","Manu_ids","xt","cust_ids","xt1","manuid","Cu","custid","Main","componentDidMount","eth","getAccounts","getBalance","net","getId","networkId","deployedNetwork","BNContract","networks","instance","Contract","abi","address","govt","res1","rex1","error","vt","storageValue","checks","exact","path","component","App","basename","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bea20197.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem } from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\nimport Web3 from \"web3\";\r\nimport '../App.css'\r\nvar util;\r\nvar util1;\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = { isNavOpen : false }\r\n        this.togglenav = this.togglenav.bind(this);\r\n\r\n    }\r\n\r\n    togglenav(){\r\n        this.setState({isNavOpen : !this.state.isNavOpen});\r\n    }\r\n    conver = async (x) => {\r\n\r\n        util =  (Web3.utils.toWei(x, 'milli'));\r\n    }\r\n    converb = async (x) => {\r\n        util1 = (Web3.utils.fromWei(x, 'milli'));\r\n    }\r\n    render(){\r\n        this.converb(this.props.balance.toString());\r\n        console.log(this.props.registered);\r\n        if (this.props.registered == 1 || this.props.registered == 2) {\r\n            return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container justify-center\">\r\n                    \r\n                        <NavbarToggler onClick={this.togglenav}/>\r\n                        <NavbarBrand className=\"mr-auto\" >BrimNet</NavbarBrand>\r\n                        <Collapse isOpen = {this.state.isNavOpen} navbar>\r\n                        \r\n                            <Nav navbar className=\"m-auto\">\r\n                            \r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/home\">Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/items\">Items</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/shipment\">Shipments</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/register\">Register</NavLink>\r\n                            </NavItem>\r\n                            \r\n                            </Nav>\r\n                            \r\n                        </Collapse>\r\n                    </div>\r\n                    <h6 style={{ color: \"white\"}}>Balance : {util1}</h6>\r\n                </Navbar>\r\n            \r\n            </React.Fragment>\r\n            );\r\n        }\r\n        else if (this.props.registered == 3 || this.props.registered == 4) {\r\n            return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container justify-center\">\r\n                    \r\n                        <NavbarToggler onClick={this.togglenav}/>\r\n                        <NavbarBrand className=\"mr-auto\" >BrimNet</NavbarBrand>\r\n                        <Collapse isOpen = {this.state.isNavOpen} navbar>\r\n                        \r\n                            <Nav navbar className=\"m-auto\">\r\n                            \r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/home\">Home</NavLink>\r\n                            </NavItem>\r\n                            \r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/register\">Register</NavLink>\r\n                            </NavItem>\r\n                            \r\n                            </Nav>\r\n                            \r\n                        </Collapse>\r\n                    </div>\r\n                    <h6 style={{ color: \"white\"}}>Balance : {util1}</h6>\r\n                </Navbar>\r\n            </React.Fragment>\r\n            );\r\n        }\r\n        else if (this.props.registered == 5) {\r\n            return(\r\n                <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container justify-center\">\r\n                    \r\n                        <NavbarToggler onClick={this.togglenav}/>\r\n                        <NavbarBrand className=\"mr-auto\" >BrimNet</NavbarBrand>\r\n                        <Collapse isOpen = {this.state.isNavOpen} navbar>\r\n                        \r\n                            <Nav navbar className=\"m-auto\">\r\n                            \r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/home\">Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/items\">Items</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/shipment\">Shipments</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/allmem\">All Members</NavLink>\r\n                            </NavItem>\r\n                            \r\n                            </Nav>\r\n                            \r\n                        </Collapse>\r\n                    </div>\r\n                    <h6 style={{ color: \"white\"}}>Balance : {util1}</h6>\r\n                </Navbar>\r\n            \r\n            </React.Fragment>\r\n            );\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container justify-center\">\r\n                    \r\n                        <NavbarToggler onClick={this.togglenav}/>\r\n                        <NavbarBrand className=\"mr-auto\" >BrimNet</NavbarBrand>\r\n                        <Collapse isOpen = {this.state.isNavOpen} navbar>\r\n                        \r\n                            <Nav navbar className=\"m-auto\">\r\n                            \r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/home\">Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link pl-5 pr-5\" to=\"/signup\">SignUp</NavLink>\r\n                            </NavItem>\r\n                            \r\n                            </Nav>\r\n                            \r\n                        </Collapse>\r\n                    </div>\r\n                    <h6 style={{ color: \"white\"}}>Balance : {util1}</h6>\r\n                </Navbar>\r\n            \r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n//import moment from 'moment';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback ,\r\n    Card, CardImg,CardImgOverlay, CardTitle, CardBody, CardText , Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\nimport Web3 from \"web3\";\r\nimport { render } from 'react-dom';\r\n\r\nvar util;\r\nvar util1;\r\nvar vx;\r\nvar alldocs = [];\r\nvar allcus = [];\r\nvar allmanu = [];\r\nvar customer;\r\n\r\nlet conver =  (x) => {\r\n\r\n    util =  (Web3.utils.toWei(x, 'milli'));\r\n    return util;\r\n}\r\nlet converb =(x) => {\r\n    util1 = (Web3.utils.fromWei(x, 'milli'));\r\n    return util1;\r\n}\r\n\r\n\r\nasync function calDist(c,manu,cnt) {\r\n    \r\n    var pin = c.custpincode;\r\n    var min = 999999;\r\n    var x; // res\r\n    var y; // y\r\n    var add ;\r\n    for (var i = 0; i < cnt; i++){\r\n        y =  manu[i].manupincode;\r\n         \r\n        x = subtract(pin,y);\r\n        if(min>x){\r\n            min = x;\r\n            y = manu[i];\r\n            add = manu[i].manuadd;\r\n        }\r\n    }\r\n\r\n    return add;\r\n}\r\n\r\nfunction subtract(a, b){\r\n    if (a > b){\r\n        return a-b;\r\n    }\r\n    else{\r\n        return b-a;\r\n    }\r\n}\r\n\r\nvar quantity;\r\nvar total;\r\nvar finalid;\r\n\r\nclass Allpatrender extends Component{\r\n    // var day = moment.unix(dish.dateofComp); \r\n    // var xy = dish.dateofComp;\r\n    // var date = new Date(xy*1000);\r\n    // var time = day.format('dddd MMMM Do YYYY, h:mm:ss a');\r\n    // var yz = xy != 0?\"bg-success text-white\":\"\";\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { docCount : 0, dish: [] , isModalOpen: false,qty: 0};\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.converb = this.converb.bind(this);\r\n        this.conver = this.conver.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.creatingShipment = this.creatingShipment.bind(this);\r\n        this.buyitem = this.buyitem.bind(this);\r\n    }\r\n    buyitem = async(typeitem) => {\r\n        var res = await this.props.contract.methods.itemcount().call();\r\n        var response2 = [];\r\n        var response3= [];\r\n        var cntres2 = 0 ;\r\n        var cntres3 = 0;\r\n        var rex2;\r\n        for(var i=1;i<=res;i++){\r\n            var rex = await this.props.contract.methods.Items(i).call();\r\n            if(rex.itemtype == typeitem){\r\n            response2.push(rex);\r\n            cntres2++;\r\n            }\r\n        }\r\n        \r\n        console.log(response2);\r\n        for(var j = 0;j<cntres2;j++){\r\n            rex2 = await this.props.contract?.methods.Manufacturers(response2[j].manadr).call();\r\n            response3.push(rex2);\r\n            cntres3++;\r\n        }\r\n        console.log(response3);\r\n        var nearadd = await calDist(customer,response3,cntres3);\r\n        console.log(nearadd);\r\n        \r\n        //  for(var k = 0; k<cntres2;k++){\r\n        //     if(nearadd == response.manadr){\r\n        //         finalid = response2.itemid;\r\n        //     }\r\n        //  }\r\n        \r\n        return(nearadd);\r\n    }  \r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    converb = async (x) => {\r\n        util1 = (Web3.utils.fromWei(x, 'milli'));\r\n    }\r\n    conver =  (x) => {\r\n\r\n        util =  (Web3.utils.toWei(x, 'milli'));\r\n        return util;\r\n    }\r\n\r\n    totalvalue = () => {\r\n        quantity = this.qty.value;\r\n        total = util1 * quantity;\r\n        alert(total);\r\n    }\r\n    creatingShipment = async(event) => {\r\n        event.preventDefault();\r\n        var itemcat =  this.props.dish?.itemtype;\r\n        var qty = this.state.qty;\r\n        var str = \"Added\";\r\n        var totalamt = conver((util1*qty).toString());\r\n        var manadr = await this.buyitem(parseInt(this.props.dish.itemtype));\r\n        const res = await this.props.contract?.methods.createShipment(itemcat,qty,str,totalamt,0,manadr).send({from: this.props.accounts,gas : 1000000});\r\n        console.log(res);\r\n        this.toggleModal();\r\n\r\n    }\r\n    \r\n\r\n    render() {\r\n        \r\n        var but = this.props.registered == 2? \"visible\" : \"invisible\";\r\n        this.converb(this.props.dish.price.toString());\r\n        var cl = this.props.dish.itemtype == 0? \"fa fa-laptop fa-5x\" :((this.props.dish.itemtype ==1)?\"fa fa-mobile fa-5x\" :\"fa fa-desktop fa-5x\" );\r\n        return(\r\n           \r\n            <Card >\r\n            <i className={cl}></i>\r\n            <CardBody>\r\n            <CardTitle>Item ID : {this.props.dish.itemid}</CardTitle>\r\n            <CardText><small>Item Type : {category(parseInt(this.props.dish.itemtype))}</small></CardText>\r\n            <CardText><small>Item Price : {util1}</small></CardText>\r\n            <CardText><small>GST : {this.props.dish.gst}</small></CardText>\r\n            <CardText><small>Description : {this.props.dish.description}</small></CardText>\r\n\r\n            <Col md={{size:10, offset:1}}>\r\n                <Button className={but} type=\"submit\" color=\"primary\" onClick={this.toggleModal}>\r\n                    Buy Item\r\n                </Button>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} className=\"modal-md\">\r\n                    <ModalHeader toggle={this.toggleModal} className=\"pl-5\">Item</ModalHeader>\r\n                        <Card className=\"pb-5\">\r\n                            <p className=\"m-auto p-4\"><i className={cl}></i></p>\r\n                            <p className=\"m-auto p-2\">Item Type : {category(parseInt(this.props.dish.itemtype))}</p>\r\n                            <p className=\"m-auto p-2\">Item Price : {util1}</p>\r\n                            <div className=\"row m-auto pt-2\">\r\n                                <p>Item Quantity : </p>\r\n                                <p> <Input type=\"text\" id=\"qty\" name=\"qty\" onChange={this.handleInputChange}></Input></p>\r\n                            </div>\r\n                            <p className=\"m-auto p-2\">TotalAmt : {util1 * (this.state.qty)}</p>\r\n                            <p className=\"m-auto p-2\">Description : {this.props.dish.description}</p>\r\n                            <p className=\"m-auto p-2\"><Button type=\"submit\" onClick={this.creatingShipment} >Confirm</Button> </p>\r\n                        </Card>\r\n                </Modal>\r\n            </Col>\r\n            </CardBody>\r\n            \r\n        </Card>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction category(i) {\r\n\r\n        switch(i) {\r\n            case 0:\r\n                vx = 'Laptop';\r\n                break;\r\n            case 1:\r\n                vx = 'Mobile';\r\n                break;\r\n            case 2:\r\n                vx = 'Desktop';\r\n                break;\r\n        }\r\n        return vx;\r\n}\r\n\r\nfunction categoryrev(i) {\r\n\r\n    \r\n        if(i == \"Laptop\")\r\n        {\r\n            return 0;\r\n        }\r\n        else if(i == \"Mobile\")\r\n        {\r\n            return 1;\r\n        }\r\n        else if(i == \"Desktop\")\r\n        {\r\n            return 2;\r\n        }\r\n        \r\n}\r\nvar itemtype;\r\nvar itemprice;\r\nvar itemgst;\r\nvar itemdesc;\r\n\r\n\r\nclass AllItemComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { docCount : 0, dish: [] , cust: [] , manuf: [] , isModalOpen1: false  }\r\n        this.toggleModal1 = this.toggleModal1.bind(this);\r\n        //this.com = this.com.bind(this);\r\n    }\r\n    \r\n    \r\n    toggleModal1() {\r\n        this.setState({\r\n            isModalOpen1: !this.state.isModalOpen1\r\n        });\r\n    }\r\n    createItem = async(itemtype,itemdesc,itemprice,itemgst) => {\r\n        const res = await this.props.contract.methods.createItems(itemtype,itemdesc,itemprice,itemgst).send({from: this.props.accounts,gas : 1000000});\r\n        console.log(res);\r\n    }\r\n    creatingItems = () => {\r\n        itemtype = categoryrev(this.type.value);\r\n        console.log(itemtype);\r\n        itemprice = (conver(this.price.value));\r\n        \r\n        itemgst = this.gst.value;\r\n        itemdesc = this.desc.value;\r\n        console.log(itemtype);\r\n        this.createItem(itemtype,itemdesc,itemprice,itemgst);\r\n        this.toggleModal1();\r\n    }\r\n    \r\n    \r\n    \r\n    async componentDidMount(){\r\n        var res = await this.props.contract?.methods.itemcount().call();\r\n        console.log(res);\r\n        var cus= await this.props.contract?.methods.customercount().call();\r\n            console.log(cus);\r\n        var manu= await this.props.contract?.methods.manufacturercount().call();\r\n            console.log(manu);\r\n    \r\n               \r\n                var response= [];\r\n                for(var i=1;i<=res;i++){\r\n                    var rex = await this.props.contract?.methods.Items(i).call();\r\n                    response.push(rex);\r\n                }\r\n                alldocs = [];\r\n                alldocs = response;\r\n                console.log(response);\r\n                this.setState({ dish : alldocs});\r\n\r\n                \r\n                customer = await this.props.contract?.methods.Customers(this.props.accounts).call();\r\n              \r\n         \r\n    }\r\n\r\n     render(){\r\n  \r\n        const Menu = this.state.dish.map((x) => {\r\n            return (\r\n                <div key={x} className=\"col-4 col-md-3\">\r\n                    < Allpatrender dish={x} contract={this.props.contract} accounts={this.props.accounts} registered = {this.props.registered}/>\r\n                </div>\r\n            );\r\n        })\r\n        \r\n        var ch = this.props.registered == 1? \"visible\" : \"invisible\";\r\n        \r\n        return(\r\n        <div className=\"container\">\r\n            <h2>All Items</h2>\r\n            <Button color=\"success\" className={ch} onClick={this.toggleModal1}>\r\n                Add Item\r\n            </Button>\r\n            \r\n            <Modal isOpen={this.state.isModalOpen1} toggle={this.toggleModal1} className=\"modal-xl\">\r\n                <ModalHeader toggle={this.toggleModal1}>\r\n                    <h3>Add Items</h3>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <div className=\"row pl-5 pr-5\">\r\n                            <div className=\"col-6\">\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"type\" className=\"ml-3\">Item Type</Label>\r\n                                    <Input type=\"select\" id=\"type\" name=\"type\" innerRef={(input) => this.type = input}>\r\n                                        <option>Select Item Type</option>\r\n                                        <option>Mobile</option>\r\n                                        <option>Laptop</option>\r\n                                        <option>Desktop</option>\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"price\" className=\"ml-3\">Item Price</Label>\r\n                                    <Input type=\"text\" id=\"price\" name=\"price\"\r\n                                        innerRef={(input) => this.price = input}  />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row pl-5 pr-5\">\r\n                            \r\n                            <div className=\"col-12\">\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"gst\" className=\"ml-3\">Item GST</Label>\r\n                                    <Input type=\"text\" id=\"gst\" name=\"gst\"\r\n                                        innerRef={(input) => this.gst = input}  />\r\n                                </FormGroup>    \r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"row pl-5 pr-5\">\r\n                            <div className=\"col-12\">\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"desc\" className=\"ml-3\">Item Description</Label>\r\n                                    <Input type=\"text\" id=\"desc\" name=\"desc\"\r\n                                        innerRef={(input) => this.desc = input}  />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"row pl-5\">\r\n                            <div className=\"col-6\">    \r\n                                <Button color=\"primary\" onClick={this.creatingItems}>Add Item</Button>\r\n                            </div>\r\n                        </div>\r\n                        <br/>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n            <br/>\r\n            <br/>\r\n            <div className=\"row\">\r\n                {Menu}\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n        \r\n        )\r\n    };\r\n}\r\n\r\nexport default AllItemComponent;","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem } from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\nimport '../App.css'\r\nimport { Container, Row, Col,Card,CardImg} from 'reactstrap';\r\n\r\n\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n   \r\n    render(){\r\n      \r\n      return(\r\n        <React.Fragment >\r\n          \r\n                <div className=\"bg\">\r\n                    <Container>\r\n                    <div className=\"inner header\">\r\n                        <h6 style={{ color: 'white'}}>SignIn to grab exciting offers and in-time deliveries</h6>\r\n                    </div>\r\n                    <Card style={{marginTop: 30, marginBottom:40}}>\r\n                      <CardImg top width=\"80%\" src=\"https://www.cined.com/content/uploads/2020/05/Dell-XPS-15-17-featured.jpg\"/>\r\n                    </Card>\r\n                    <Card style={{marginTop: 30}}>\r\n                      <CardImg top width=\"80%\" src=\"https://cdn.pocket-lint.com/r/s/970x/assets/images/124434-phones-buyer-s-guide-best-android-phones-2017-these-are-the-androids-you-re-looking-for-image1-kiqmufsv8x.jpg\" />\r\n                    </Card>\r\n                    <Card style={{marginTop: 30 }}>\r\n                      <CardImg top width=\"80%\" src=\"https://www.cgcomputers.co.uk/data/files/lenovo.jpg\" />\r\n                    </Card>\r\n                    <Card style={{marginTop: 30 }}>\r\n                      <CardImg top width=\"80%\" src=\"https://i2.wp.com/www.smartprix.com/bytes/wp-content/uploads/2020/06/Mi-laptop.jpg?fit=1200%2C675&ssl=1\"/>\r\n                    </Card>\r\n                    <Card style={{marginTop: 30}}>\r\n                      <CardImg top width=\"80%\" src=\"https://images.anandtech.com/doci/11455/dell_inspiron_7000_1.jpg\"/>\r\n                    </Card>\r\n                    <Card style={{marginTop: 30}}>\r\n                      <CardImg top width=\"80%\" src=\"http://static4.businessinsider.com/image/598a08ec76084a2b198b513a-1190-625/this-eye-catching-new-phone-out-of-china-is-a-great-example-of-where-the-future-of-smartphones-is-headed.jpg\"/>\r\n                    </Card>\r\n                    \r\n                    </Container>\r\n                </div>\r\n                \r\n                \r\n        \r\n        </React.Fragment>\r\n        );\r\n      \r\n    }\r\n\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Input , Button } from 'reactstrap';\r\nimport { BrowserRouter, NavLink , Redirect , Link } from 'react-router-dom';\r\n \r\nimport '../App.css'\r\nvar x;\r\n\r\n\r\nclass SignUp extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmitMan = this.handleSubmitMan.bind(this);\r\n        this.handleSubmitCust = this.handleSubmitCust.bind(this);\r\n        this.handleSubmitGovt = this.handleSubmitGovt.bind(this);\r\n    }\r\n\r\n    \r\n    async handleSubmitCust(event){\r\n        event.preventDefault();\r\n        this.props.reghandler(4);\r\n    }\r\n    async handleSubmitMan(event){\r\n        event.preventDefault();\r\n         this.props.reghandler(3);\r\n    }\r\n    async handleSubmitGovt(event){\r\n        event.preventDefault();\r\n         if(this.props.accounts == '0xC0EC435ad729B545d645bA3A83C74872D585e282'){\r\n         this.props.reghandler(5);\r\n         console.log(this.props.registered);\r\n         }\r\n    }\r\n    render(){\r\n        return(\r\n            \r\n            <React.Fragment>\r\n                <h1>SignUp Page</h1>\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center pt-3\">             \r\n                        <div className=\"col-4\">\r\n                            <h6 className=\"m-auto\"> Customer SignUp</h6>\r\n                            <div className=\"part pt-5\">\r\n                                <i class=\"fa fa-user-circle-o fa-4x\" aria-hidden=\"true\"></i>\r\n                                <br/><br/>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <label> Name </label><br/>\r\n                                    <input type=\"text\" name=\"fulname\" placeholder=\"Enter name...\" style={{ width: \"250px\"}} required/>\r\n                                </div> \r\n\r\n                                <div className=\"p-2\">\r\n                                    <label> Aadhar Number </label><br/>\r\n                                    <input type=\"text\" name=\"aadhar\" placeholder=\"Enter Aadhar Number...\" style={{ width: \"250px\"}} required/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <label> Address </label><br/>\r\n                                    <input type=\"text\" name=\"addr\" placeholder=\"Enter Address...\" style={{ width: \"250px\"}} required/>\r\n                                </div>\r\n                                \r\n                                <button class=\"btn btn-sm btn-primary text-uppercase pl-3 pr-3\" type=\"submit\" onClick={this.handleSubmitCust} ><Link to=\"/register\" style={{textDecoration: 'none' , color: 'white'}}>Sign Up</Link></button>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <h6 className=\"m-auto\"> Manufacturer SignUp</h6>\r\n                            <div className=\"part pt-5\">\r\n                                <i class=\"fa fa-users fa-4x\" aria-hidden=\"true\"></i>\r\n\r\n                                <br/><br/>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <label> Name </label><br/>\r\n                                    <input type=\"text\" name=\"fulname\" placeholder=\"Enter name...\" style={{ width: \"250px\"}} required/>\r\n                                </div> \r\n\r\n                                <div className=\"p-2\">\r\n                                    <label> Aadhar Number </label><br/>\r\n                                    <input type=\"text\" placeholder=\"Enter Aadhar Number...\" style={{ width: \"250px\"}} required/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <label> Address </label><br/>\r\n                                    <input type=\"text\" placeholder=\"Enter Address...\" style={{ width: \"250px\"}} required/>\r\n                                </div>\r\n                                \r\n                                <button class=\"btn btn-sm btn-primary text-uppercase pl-3 pr-3\" type=\"submit\" onClick={this.handleSubmitMan}><Link to=\"/register\" style={{textDecoration: 'none' , color: 'white'}}>Sign Up</Link></button>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            \r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback ,\r\n    Card, CardImg,CardImgOverlay, CardTitle, CardBody, CardText , Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\nimport StepProgressBar from 'react-step-progress';\r\nimport Web3 from \"web3\";\r\nimport 'react-step-progress/dist/index.css';\r\n\r\nvar x = 'hello';\r\nvar arr7= [];\r\nvar arr8=[];\r\n\r\nfunction secondsToHms(d) {\r\n    d = Number(d);\r\n    var h = Math.floor(d / 3600);\r\n    var m = Math.floor(d % 3600 / 60);\r\n    var s = Math.floor(d % 3600 % 60);\r\n\r\n    var hDisplay = h > 0 ? h + (h == 1 ? \" hr, \" : \" hrs,\") : \"\";\r\n    var mDisplay = m > 0 ? m + (m == 1 ? \" min, \" : \" mins,\") : \"\";\r\n    var sDisplay = s > 0 ? s + (s == 1 ? \" sec\" : \" secs\") : \"\";\r\n    return hDisplay + mDisplay + sDisplay; \r\n}\r\n// Step Progress \r\n    function onFormSubmit() {\r\n    \r\n    }\r\n\r\n    const step0Contents = <h3 className=\"mt-5 pb-0\" style={{display: 'flex', justifyContent:'center', alignItems:'center'}}>NotPaid </h3>;\r\n    const step1Contents = <h3 className=\"mt-5 pb-0\" style={{display: 'flex', justifyContent:'center', alignItems:'center'}}>InSmartContract</h3>;\r\n    const step2Contents = <h3 className=\"mt-5 pb-0\" style={{display: 'flex', justifyContent:'center', alignItems:'center'}}>Received </h3>;\r\n\r\n    function onFormSubmit1() {\r\n    \r\n    }\r\n\r\n// Convert price\r\n    var util;\r\n    var util1;\r\n    let conver = async (x) => {\r\n\r\n        util =  (Web3.utils.toWei(x, 'milli'));\r\n    }\r\n    let converb = async (x) => {\r\n        util1 = (Web3.utils.fromWei(x, 'milli'));\r\n    }\r\n    let value;\r\n    let value1;\r\n    function shipstate(s) {\r\n\r\n        switch(s) {\r\n            case 0:\r\n                value = 'Added';\r\n                break;\r\n            case 1:\r\n                value = 'Pending';\r\n                break;\r\n            case 2:\r\n                value = 'Confirmed';\r\n                break;\r\n            case 3:\r\n                value = 'Manufactured';\r\n                break;\r\n            case 4:\r\n                value = 'Outfordel';\r\n                break;\r\n            case 5:\r\n                value = 'Delievered';\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n    function status(s) {\r\n        \r\n        switch(s) {\r\n            case 0:\r\n                value1 = 'NotPaid';\r\n                break;\r\n            case 1:\r\n                value1 = 'InSc';\r\n                break;\r\n            case 2:\r\n                value1 = 'Received';\r\n                break;\r\n        }  \r\n        return value1; \r\n    }\r\n\r\n    var vx;\r\n    function category(i) {\r\n\r\n        switch(i) {\r\n            case 0:\r\n                vx = 'Laptop';\r\n                break;\r\n            case 1:\r\n                vx = 'Mobile';\r\n                break;\r\n            case 2:\r\n                vx = 'Desktop';\r\n                break;\r\n        }\r\n        return vx;\r\n}\r\n\r\n    var a;\r\n    var b;\r\n    var val;\r\n    var fun;\r\n// Class \r\n    var alldocs = [];\r\n    class Allpatrender extends Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state = { docCount : 0, qty: 0 , dish: [] , isModalOpen: false, isModalOpen1: false, back: true, ships:[],shiptime: [],\r\n                quan : null, payfor:[] , paytime: [],asp : 0,progt:0 , next : [{\r\n                label: a,\r\n                subtitle: b,//this.state.shiptime[cnt]  ,\r\n            content: <h3 className=\"mt-5 pb-0\" style={{display: 'flex', justifyContent:'center', alignItems:'center'}}>{a}</h3>\r\n                }]};\r\n            this.toggleModal = this.toggleModal.bind(this);\r\n            this.toggleModal1 = this.toggleModal1.bind(this);\r\n            this.converb = this.converb.bind(this);\r\n            this.dopayment = this.dopayment.bind(this);\r\n            this.getshipevents = this.getshipevents.bind(this);\r\n            this.getpayevents = this.getpayevents.bind(this);\r\n            this.updateShipstate = this.updateShipstate.bind(this);\r\n            this.cancel = this.cancel.bind(this);\r\n            this.delivered = this.delivered.bind(this);\r\n            this.convery = this.convery.bind(this);\r\n            this.shipstate = this.shipstate.bind(this);\r\n            this.handleInputChange = this.handleInputChange.bind(this);\r\n        } \r\n\r\n        toggleModal() {\r\n            this.setState({\r\n                isModalOpen: !this.state.isModalOpen\r\n            });\r\n        }\r\n        toggleModal1() {\r\n            this.setState({\r\n                isModalOpen1: !this.state.isModalOpen1\r\n            });\r\n        }\r\n\r\n        shipstate(s) {\r\n                value = '';\r\n            switch(s) {\r\n                case 0:\r\n                    value = 'Added';\r\n                    break;\r\n                case 1:\r\n                    value = 'Pending';\r\n                    break;\r\n                case 2:\r\n                    value = 'Confirmed';\r\n                    break;\r\n                case 3:\r\n                    value = 'Manufactured';\r\n                    break;\r\n                case 4:\r\n                    value = 'Outfordel';\r\n                    break;\r\n                case 5:\r\n                    value = 'Delievered';\r\n                    break;\r\n                case 6:\r\n                    value = 'Cancelled';\r\n                    break;\r\n                        \r\n            }\r\n            return value;\r\n        }\r\n        cancel = async() => {\r\n            \r\n            // const res = await this.props.contract.methods.updateShstate(this.props.dish.shid,\"Cancelled\").send({from: this.props.accounts,gas : 1000000});\r\n            // console.log(res);\r\n            // const res3 = await this.props.contract.methods.updateShstatus(this.props.dish.shid,2).send({from: this.props.accounts,gas : 1000000});\r\n            // console.log(res3);\r\n            const res2 = await this.props.contract.methods.withdrawmoney(this.props.dish.shid , 2).send({from: this.props.accounts,gas : 1000000})\r\n            console.log(res2);\r\n            this.toggleModal();\r\n        }\r\n\r\n        delivered = async() => {\r\n            const res2 = await this.props.contract.methods.withdrawmoney(this.props.dish.shid,1).send({from: this.props.accounts,gas : 1000000})\r\n            console.log(res2);\r\n            this.toggleModal();\r\n        }\r\n\r\n        getshipevents = async() => {\r\n            this.toggleModal();\r\n            this.getpayevents();\r\n            var arr =[];\r\n            const timefor = [];\r\n            const timeof = [];\r\n            const req = await this.props.contract.getPastEvents('processchange', {\r\n                filter: { ship_id: this.props.dish.shid },\r\n                fromBlock: 0,    \r\n            });\r\n            var res7 ;\r\n            arr7=[];\r\n\r\n            req.forEach(async (ele) => {\r\n                \r\n                const ship_id = (ele.returnValues.ship_id);\r\n                const shstate = (ele.returnValues.shstate);\r\n                const times = (ele.returnValues.times);\r\n                console.log(\"item : \",ship_id,shstate,times);\r\n                var day = moment.unix(times); \r\n                var time = day.format('D-MMM-YY, hh:mm:ss a');\r\n                timefor.ship_id = ship_id;\r\n                timefor.shstate = shstate;\r\n                timefor.timenow = times;\r\n                timefor.time = time.toString();\r\n                timeof.push(timefor);\r\n                \r\n                res7 = {\r\n                    label: timefor.shstate,\r\n                    subtitle: timefor.time,//this.state.shiptime[cnt]  ,\r\n                    content: <h3 className=\"mt-5 pb-0\" style={{display: 'flex', justifyContent:'center', alignItems:'center'}}>{timefor.shstate}</h3>\r\n                    }\r\n                arr7.push(timefor.timenow);\r\n                    arr.push(res7);\r\n                \r\n            });\r\n            console.log(arr.length);\r\n            arr8 =[];\r\n            for(var i = 1; i< arr7.length; i++){\r\n                var timedif = secondsToHms((arr7[i]) - (arr7[i-1]));\r\n                console.log(timedif)\r\n                arr8.push(timedif);        \r\n            }\r\n            \r\n            var po = arr.length - 1 \r\n            this.setState({shiptime : timeof,next : arr,asp : po});\r\n            \r\n            //  console.log(this.state.ships);\r\n            console.log(this.state.shiptime);\r\n        }\r\n        getpayevents = async() => {\r\n            const pays =[];\r\n            const req1 = await this.props.contract.getPastEvents('processpay', {\r\n                filter: { ship_id: this.props.dish.shid },\r\n                fromBlock: 0,\r\n            });\r\n            req1.forEach(async (ele) => {\r\n                \r\n                 const ship_id = (ele.returnValues.ship_id);\r\n                 const paystate = (ele.returnValues.pay);\r\n                 const times = (ele.returnValues.times);\r\n                // console.log(\"item : \",ship_id,paystate,times);\r\n                var day = moment.unix(times); \r\n                 var time = day.format('D-MMM-YY, hh:mm:ss a');\r\n                pays.push(time.toString());\r\n                \r\n            });\r\n            this.setState({payfor : pays});\r\n                console.log(this.state.ships)\r\n        }\r\n        getshipState = async (x) => {\r\n            const res = await this.props.contract.methods.getshipstate(this.props.dish.shid).call();\r\n            console.log(\"dsf\",res);\r\n        }\r\n        \r\n        converb = async (x) => {\r\n            util1 = (Web3.utils.fromWei(x, 'milli'));\r\n        }\r\n        converx = async (x) =>{\r\n            var util7 = (Web3.utils.fromWei(x, 'milli'));\r\n            return util7;\r\n        }\r\n        convery =  (x) =>{\r\n            var util8 =  (Web3.utils.toWei(x, 'milli'));\r\n            return util8;\r\n        }\r\n        dopayment = async() => {\r\n          \r\n\r\n                const res = await this.props.contract.methods.payitem(this.props.dish.totalamt.toString(),this.props.dish.shid,\"Customer Paid\").send({from: this.props.accounts,value: this.props.dish.totalamt.toString(),gas : 1000000});\r\n                console.log(res);\r\n        }\r\n        updateShipstate = async() => {\r\n            this.toggleModal1();\r\n            console.log(this.state.quan);\r\n           \r\n             const res = await this.props.contract.methods.updateShstate(this.props.dish.shid,this.state.quan).send({from: this.props.accounts,gas : 1000000});\r\n             console.log(res);\r\n            \r\n            \r\n        }\r\n\r\n        handleInputChange(event){\r\n            const target = event.target;\r\n            const value = target.value;\r\n            const name = target.name;\r\n            this.setState({\r\n                [name] : value\r\n            })\r\n        }\r\n        \r\n    render(){\r\n        const prog = arr8.map((x) => {\r\n            return (\r\n                <div style={{paddingRight:'5%',paddingLeft:'5%',display: 'inline',justifyContent:'center', alignItems:'center'}}>\r\n                    <b key={x} className=\"m-auto\" style={{ justifyContent:'center', alignItems:'center'}}>\r\n                        {x} \r\n                    </b>\r\n                    \r\n                </div>\r\n                \r\n            );\r\n        })\r\n\r\n        this.converb(this.props.dish.totalamt.toString());\r\n        a = 1;\r\n        b = this.props.dish.payment;\r\n        var ch ;\r\n\r\n        if(this.props.registered == 1){\r\n            ch = \"ml-2 visible\";\r\n            val = \"Next\";\r\n            fun = this.toggleModal1;\r\n        }\r\n        else if(this.props.registered == 2){\r\n            ch = \"ml-2 visible\";\r\n            val = \"Pay\";\r\n            fun = this.dopayment;\r\n        }\r\n        else {\r\n            ch = \"invisible\";\r\n        }\r\n\r\n        var xy = this.props.dish.states.length;\r\n        --xy;\r\n        var y;\r\n\r\n        var bak = this.props.dish.states[xy] == \"Cancelled\" ? \"bg-danger whiteButton\" : \"blackButton\";\r\n    \r\n        if(this.props.registered == 2 && this.props.dish.states[xy] == \"Cancelled\") {\r\n            y = \"invisible\";\r\n            ch = \"invisible\";\r\n        }\r\n        else if(this.props.registered == 2 && this.props.dish.states[xy] == \"Delivered\") {\r\n            y = \"invisible\";\r\n            ch = \"invisible\";\r\n        }\r\n        else if(this.props.registered == 2 && this.props.dish.states.length<3) {\r\n            y = \"mt-2 visible\";\r\n        }\r\n        else if(this.props.registered == 1 && this.props.dish.states[xy] == \"Cancelled\") {\r\n            y = \"invisible\";\r\n            ch = \"invisible\";\r\n        }\r\n        else if(this.props.registered == 1 && this.props.dish.states[xy] == \"Delivered\") {\r\n            y = \"invisible\";\r\n            ch = \"invisible\";\r\n        }\r\n        else if(this.props.registered == 1) {\r\n            y = \"mt-2 visible\";\r\n        }\r\n        else{\r\n            y = \"mt-2 invisible\";\r\n        }\r\n        \r\n        return(\r\n            <Card className={bak}>\r\n            <i className=\"fa fa-envelope fa-5x\"></i>\r\n            <CardBody>\r\n            <CardTitle>Shipment ID : {this.props.dish.shid}</CardTitle>\r\n            <CardText><small>Item Category : {category(parseInt(this.props.dish.itemcat))}</small></CardText>\r\n            <CardText><small>Item Quantity : {this.props.dish.qty}</small></CardText>\r\n            <CardText><small>Shipment Status : {this.props.dish.states[xy]}</small></CardText>\r\n            <CardText><small>Total Amount : {util1}</small></CardText>\r\n            <CardText><small>Payment Status : {status(parseInt(this.props.dish.payment))}</small></CardText>\r\n            \r\n            <Col sm={{size:12}}>\r\n                <Button color=\"primary\" onClick={this.getshipevents}>\r\n                    Shipment\r\n                </Button>\r\n                <Button className={ch} color=\"primary\" onClick={fun}>\r\n                    {val}\r\n                </Button>\r\n                <Button color=\"danger\" onClick = {this.cancel} className={y}>\r\n                    Cancel\r\n                </Button> \r\n                \r\n                <Modal isOpen={this.state.isModalOpen1} toggle={this.toggleModal1} className=\"modal-md\" style={{marginTop: 150}}>\r\n                    <ModalHeader toggle={this.toggleModal1} className=\"pl-5\">Add your Shipment Status</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"row m-auto p-5\">\r\n                            <p>Shipment Status : </p>\r\n                            <p> <Input type=\"text\" id=\"quan\" name=\"quan\" onChange={this.handleInputChange}></Input></p>\r\n                            <Button className=\"ml-5\" color=\"success\" onClick = {this.updateShipstate}>Confirm</Button>\r\n                            <Button className=\"ml-2\" color=\"info\" onClick = {this.delivered}>Delivered</Button>\r\n                        </div>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} className=\"modal-xl\">\r\n                <ModalHeader toggle={this.toggleModal} className=\"pl-5\">Shipment Status</ModalHeader>\r\n                <ModalBody>\r\n\r\n                <div style={{display: 'flex', justifyContent:'center', alignItems:'center'}}>\r\n                    {prog}\r\n                </div>\r\n                    \r\n                <StepProgressBar startingStep={this.state.asp} primaryBtnClass={\"pri\"} secondaryBtnClass={\"pri\"}  \r\n                onSubmit={onFormSubmit1} steps={this.state.next}/>\r\n                        \r\n                    {/* <div style={{display: 'flex', justifyContent:'center', alignItems:'center'}}>\r\n                        <Button className={ch} onClick = {this.updateShipstate}>Next</Button>\r\n                        <Button color=\"danger\" onClick = {this.cancel} className={xy}>Cancel</Button>\r\n                    </div> */}\r\n                    <h5 className=\" ml-5 \">Payment Status</h5>\r\n                    <hr/>\r\n                    <StepProgressBar startingStep={b++} primaryBtnClass={\"pri\"} secondaryBtnClass={\"pri\"}  onSubmit={onFormSubmit1} steps={[\r\n                        {\r\n                        label: 'NotPaid',\r\n                        subtitle: this.state.payfor[0],\r\n                        name: 'step 0',\r\n                        content: step0Contents\r\n                         },\r\n                        {\r\n                        label: 'InSmartContract',\r\n                        subtitle: this.state.payfor[1],\r\n                        name: 'step 1',\r\n                        content: step1Contents\r\n                        },\r\n                        {\r\n                        label: 'Received',\r\n                        subtitle: this.state.payfor[2],\r\n                        name: 'step 2',\r\n                        content: step2Contents\r\n                        }\r\n                    ]}\r\n                    />\r\n                </ModalBody>\r\n                \r\n            </Modal>\r\n            </Col>\r\n            \r\n            </CardBody>\r\n        </Card>\r\n        )\r\n            }\r\n            \r\n    }\r\n\r\nclass Shipment extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { docCount : 0, dish: [] , isModalOpen: false,shipstates : []};\r\n    }  \r\n    \r\n    async componentDidMount(){\r\n        let res5 = [];\r\n        var res = await this.props.contract?.methods.shipmentcount().call();\r\n           console.log(res);    \r\n                var response= [];\r\n                for(var i=1;i<=res;i++){\r\n                    var rex = await this.props.contract?.methods.Shipments(i).call();\r\n                    if(rex.manadr == this.props.accounts){\r\n                        res5 = await this.props.contract.methods.getshipstate(i).call()\r\n                        rex.states = res5;\r\n                        response.push(rex);\r\n                    }\r\n                    else if(rex.custadr == this.props.accounts){\r\n                        res5 = await this.props.contract.methods.getshipstate(i).call()\r\n                        rex.states = res5;\r\n                        response.push(rex);\r\n                    \r\n                      \r\n                    }\r\n                    else if(this.props.registered == 5){\r\n                        res5 = await this.props.contract.methods.getshipstate(i).call()\r\n                        rex.states = res5;\r\n                        response.push(rex);\r\n                    }\r\n                }\r\n         \r\n                alldocs = [];\r\n                alldocs = response;\r\n                console.log(response);\r\n                \r\n            \r\n                this.setState({ dish : alldocs});\r\n                \r\n                \r\n    }\r\n\r\n    \r\n     render(){\r\n  \r\n        const Menu = this.state.dish.map((x) => {\r\n            return (\r\n                <div key={x} className=\"col-4 col-md-3\">\r\n                    < Allpatrender dish={x} contract={this.props.contract} accounts={this.props.accounts} registered = {this.props.registered}/>\r\n                </div>\r\n            );\r\n        })\r\n    \r\n        return(\r\n        <div className=\"container\">\r\n            <h2>All Shipments</h2>\r\n            <br/>\r\n            <br/>\r\n            <div className=\"row\">\r\n                {Menu}\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n        \r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Shipment;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\" style={{bottom:0}}>\r\n            \r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright @2020 BrimNet | Privacy Policy | Terms Of Use | Sales And Refunds | Site Map</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem } from 'reactstrap';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\n \r\nimport '../App.css'\r\n\r\nvar reg;\r\nvar ele;\r\nclass RegisterComp extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={name : '', pincode : null};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.updatingManufacturer = this.updatingManufacturer.bind(this);\r\n        this.addingCustomer = this.addingCustomer.bind(this);\r\n        this.updatingCustomer = this.updatingCustomer.bind(this);\r\n        this.addingManufacturer = this.addingManufacturer.bind(this);\r\n\r\n    }\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    updatingManufacturer = async(name,pinc) => {\r\n        const res = await this.props.contract.methods.updateManufacturer(name,pinc).send({from: this.props.accounts,gas : 1000000});\r\n        console.log(res);\r\n    }\r\n    addingCustomer = async(name,pinc) => {\r\n        const res = await this.props.contract.methods.addCustomer(name,pinc).send({from: this.props.accounts,gas : 1000000});\r\n        console.log(res);\r\n    }\r\n    updatingCustomer = async(name,pinc) => {\r\n        const res = await this.props.contract.methods.modifyCustomer(name,pinc).send({from: this.props.accounts,gas : 1000000});\r\n        console.log(res);\r\n    }\r\n    addingManufacturer = async(name,pinc) => {\r\n        const res = await this.props.contract.methods.addManufacturer(name,pinc).send({from: this.props.accounts,gas : 1000000});\r\n        console.log(res);\r\n    }\r\n    async handleSubmit(event){\r\n        console.log(\"Current State\" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n        \r\n    console.log(reg);\r\n    if(reg == 1){\r\n        this.updatingManufacturer(this.state.name,this.state.pincode);\r\n    }\r\n    else if(reg == 2){\r\n        this.updatingCustomer(this.state.name,this.state.pincode);\r\n    }\r\n    else if(reg == 3){\r\n        this.addingManufacturer(this.state.name,this.state.pincode);\r\n    }\r\n    else if(reg == 4){\r\n        this.addingCustomer(this.state.name,this.state.pincode);\r\n        \r\n    } \r\n    \r\n    }\r\n\r\n    func(){\r\n    reg = this.props.registered;\r\n    console.log(reg);\r\n    switch(reg) {\r\n        case 3:\r\n            ele = 'Register Manufacturer';\r\n            break;\r\n        case 1:\r\n            ele = 'Update Manufacturer';\r\n            break;\r\n        case 4:\r\n            ele = 'Register Customer';\r\n            break;\r\n        case 2:\r\n            ele = 'Update Customer';\r\n            break;\r\n        default : \r\n            ele = \"Register\";\r\n    }\r\n    \r\n    }\r\n\r\n    render(){\r\n        this.func();\r\n        return(\r\n            <React.Fragment>\r\n                <div classname=\"container\">\r\n\r\n                <h1>{ele}</h1>\r\n\r\n                </div>\r\n                <div className=\"container\">\r\n                \r\n            <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"name\" md={2}>Name</Label>\r\n                            <Col md={10}>\r\n                                <Input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Name\" value={this.state.name} onChange={this.handleInputChange}/>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"pincode\" md={2}>Pincode</Label>\r\n                            <Col md={10}>\r\n                                <Input type=\"tel\" id=\"pincode\" name=\"pincode\" placeholder=\"Pincode\" value={this.state.pincode} onChange={this.handleInputChange} />    \r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Col md={{size:10, offset:2}}>\r\n                                <Button type=\"submit\" color=\"primary\" >\r\n                                    {ele}\r\n                                </Button>\r\n                            </Col>\r\n                            \r\n                        </FormGroup>\r\n                    </Form>\r\n                 \r\n            </div>\r\n   \r\n            \r\n            </React.Fragment>\r\n        )\r\n    \r\n    }\r\n\r\n}\r\n\r\nexport default RegisterComp;\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback ,Card, CardImg,CardImgOverlay, CardTitle, CardBody, CardText} from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\n\r\nimport { render } from 'react-dom';\r\nvar mst;\r\nvar alldocs = [];\r\nvar allcusts = [];\r\nfunction Allmanrender({dish}){\r\n    var yz = \"bg-success text-white\"; \r\n    return(\r\n        <Card className={yz}>\r\n        <i className=\"fa fa-users fa-4x\"></i>\r\n        <CardBody>\r\n        <CardTitle>Manufacturer Name : {dish.manuname}</CardTitle>\r\n        <CardText><small>Account : {dish.manuadd}</small></CardText>\r\n          <CardText>\r\n            <small>Pincode : {dish.manupincode}</small>\r\n          </CardText>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n    }\r\n    function Allcustrender({custs}){\r\n        var yz = \"bg-primary text-white\"; \r\n        return(\r\n            <Card className={yz}>\r\n            <i className=\"fa fa-user fa-4x\"></i>\r\n            <CardBody>\r\n            <CardTitle>Customer Name : {custs.custname}</CardTitle>\r\n            <CardText><small>Account : {custs.custadd}</small></CardText>\r\n              <CardText>\r\n                <small>Pincode : {custs.custpincode}</small>\r\n              </CardText>\r\n            </CardBody>\r\n          </Card>\r\n        )\r\n        }\r\n\r\nclass AllMemComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { docCount : 0, dish: [], custs: [] }\r\n        //this.com = this.com.bind(this);\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        var res = await this.props.contract?.methods.manufacturercount().call();\r\n               \r\n                var response= [];\r\n                for(var i=1;i<=res;i++){\r\n                    var rex = await this.props.contract?.methods.Manu_ids(i).call();\r\n                    response.push(rex);\r\n                }\r\n             \r\n                alldocs = [];\r\n                for(var j=0;j<response.length;j++){\r\n                    var xt = await this.props.contract.methods.Manufacturers(response[j]).call();\r\n                    alldocs.push(xt);\r\n                 \r\n                }\r\n                console.log(alldocs);\r\n                this.setState({ dish : alldocs});\r\n\r\n                var res2 = await this.props.contract?.methods.customercount().call();\r\n               \r\n                var response2= [];\r\n                for(var i=1;i<=res2;i++){\r\n                    var rex = await this.props.contract?.methods.cust_ids(i).call();\r\n                    response2.push(rex);\r\n                }\r\n            \r\n                allcusts = [];\r\n                for(var j=0;j<response2.length;j++){\r\n                    var xt1 = await this.props.contract.methods.Customers(response2[j]).call();\r\n                    allcusts.push(xt1);\r\n                    console.log(j);\r\n                }\r\n                console.log(allcusts);\r\n                this.setState({ custs : allcusts});\r\n         \r\n    }\r\n\r\n     render(){\r\n         var z = this.props.accounts;\r\n        \r\n        const Menu = this.state.dish.map((x) => {\r\n            return (\r\n                <div key={x.manuid} className=\"col-4 col-md-3\">\r\n                    < Allmanrender dish={x}/>\r\n                </div>\r\n            );\r\n        })\r\n        const Cu = this.state.custs.map((y) => {\r\n            return (\r\n                <div key={y.custid} className=\"col-4 col-md-3\">\r\n                    < Allcustrender custs={y}/>\r\n                </div>\r\n            );\r\n        })\r\n        return(\r\n        <div className=\"container\">\r\n            <h2>All Members</h2>\r\n            <div className=\"row\">\r\n                {Menu}\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <div className=\"row\">\r\n                {Cu}\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            \r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default AllMemComponent;","import React, { Component } from \"react\";\r\nimport BNContract from \"../contracts/BrimNet.json\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport \"../App.css\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Home from './HomeComponent';\r\nimport SignUp from \"./SignUpComponent\";\r\nimport  AllItemComponent  from \"./ItemComponent\";\r\nimport Shipment from \"./ShipmentComponent\";\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Footer from './FooterComponent';\r\nimport RegisterComp from './RegisterComponent';\r\nimport AllMemComponent from './AllmemberComponent';\r\n\r\n\r\n//import HDWalletProvider from \"@truffle/hdwallet-provider\";\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { storageValue: 0, web3: null, accounts: null,balance:0, contract: null ,res : null,registered : 0,govt : null};\r\n }\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      // Get network provider and web3 instance.\r\n      const web3 = await getWeb3();\r\n\r\n      // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n      const balance = await web3.eth.getBalance(accounts[0])\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = BNContract.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        BNContract.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n      var govt = networkId == 3?\"0x4271AC6Bb565D120e2Ac1C3fb855aE5Dad6aE8ff\":\"0x8c009421d817D9AB4b39Ad93c2dF05A3253F5f4a\";\r\n      console.log(govt);\r\n      // Set web3, accounts, and contract to the state, and then proceed with an\r\n      // example of interacting with the contract's methods.\r\n      console.log(instance)\r\n      this.setState({ web3, accounts : accounts[0] , contract: instance,balance,govt });\r\n      \r\n      if(accounts[0] == govt){\r\n        this.setState({registered : 5});\r\n        console.log(this.state.registered);\r\n        }\r\n      var res = await this.state.contract.methods.manufacturercount().call();\r\n        \r\n      for(var i=1;i<=res;i++){\r\n          var rex = await this.state.contract?.methods.Manu_ids(i).call();\r\n          console.log(rex);\r\n          if(rex == this.state.accounts){\r\n            this.setState({registered : 1});\r\n            console.log(1);\r\n            break;\r\n          }\r\n   \r\n      }\r\n      \r\n      var res1 = await this.state.contract.methods.customercount().call();\r\n      console.log(this.state.accounts);\r\n      for(var i=1;i<=res1;i++){\r\n          var rex1 = await this.state.contract?.methods.cust_ids(i).call();\r\n            console.log(rex1);\r\n          if(rex1 ==  this.state.accounts){\r\n          \r\n            this.setState({registered : 2});\r\n            console.log(2);\r\n            break;\r\n          }   \r\n          \r\n      }\r\n\r\n      \r\n      \r\n     \r\n      \r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      \r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  async checks(address){\r\n   \r\n                 }\r\n  \r\n  reghandler = (vt) => {\r\n      this.setState({registered : vt });\r\n    }\r\n\r\n  render() {\r\n    this.checks(this.state.accounts);\r\n    return (\r\n      <div className=\"App\">\r\n        <Header contract={this.state.contract} accounts={this.state.accounts} registered = {this.state.registered} balance={this.state.balance} web3={this.state.web3}/>\r\n        <Switch>\r\n            <Route exact path=\"/home\" component={() => <Home contract={this.state.contract} accounts={this.state.accounts} registered = {this.state.registered}/>}/>\r\n            <Route exact path=\"/signup\" component={() => <SignUp contract={this.state.contract} accounts={this.state.accounts} registered = {this.state.registered} reghandler = {this.reghandler}/>}/> \r\n            <Route exact path='/items' component={() => <AllItemComponent contract={this.state.contract} accounts={this.state.accounts} registered = {this.state.registered}/>}/>\r\n            <Route exact path=\"/shipment\" component={() => <Shipment contract={this.state.contract} accounts={this.state.accounts} registered = {this.state.registered}/>}/>\r\n            <Route exact path=\"/register\" component={() => <RegisterComp contract={this.state.contract} accounts={this.state.accounts} registered = {this.state.registered}/>}/> \r\n            <Route exact path=\"/allmem\" component={() => <AllMemComponent contract={this.state.contract} accounts={this.state.accounts} registered = {this.state.registered}/>}/>\r\n            <Redirect to=\"/home\"/>\r\n        </Switch>\r\n        <Footer/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Main;","\r\nimport React, { Component } from \"react\";\r\nimport Main from './Components/MainComponents';\r\nimport {HashRouter,BrowserRouter} from 'react-router-dom';\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n      <div className=\"App\">\r\n        <Main />\r\n      </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}